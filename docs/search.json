[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "paRticles: Quick, unpolished thoughts, discoveries, and ideas about all things R."
  },
  {
    "objectID": "posts/lda_qda/index.html",
    "href": "posts/lda_qda/index.html",
    "title": "1-D Illustration of LDA vs QDA with {distributional}",
    "section": "",
    "text": "So, three things happened this week that inspired this tidbit:\n\nI learned about the {distributional} package by ‚Ä¶ at the UseR 2024 conference, which basically defines distributions as their own objects, to be plotted or used in calculations. Very cool!\nI was reminded in a conversation recently that {gganimate} is cool and something I‚Äôd like to use more in classes.\nA student asked me why QDA can lead to circular boundaries and LDA can‚Äôt, when the only difference is whether we let the covariance vary by group. I answered by very badly drawing a series of pictures in the 1-D case.\n\nSo my goal here is to re-create those pictures as a gif.\n\nlibrary(tidyverse)\nlibrary(distributional)\nlibrary(gganimate)\n\nAlright, first thing is to figure out plotting two normal distributions using {distributional}\n\nmy_dists &lt;- c(dist_normal(mu = 0, sigma = 1), \n              dist_normal(mu = 3, sigma = 1))\n\nmy_dists\n\n&lt;distribution[2]&gt;\n[1] N(0, 1) N(3, 1)\n\n\nDISTRIBUTIONS AS OBJECTS my people I am so pleased with this structure.\nOkay hang on apparently we need ggdist too to plot it‚Ä¶ whoa I don‚Äôt think I realized how awesome and built-out ggdist is.\nAnyways now it‚Äôs super easy‚Ä¶\n\nlibrary(ggdist)\n\nggplot(my_dists) +\n  stat_dist_halfeye(aes(dist = dist))\n\nError in `fortify()`:\n! `data` must be a &lt;data.frame&gt;, or an object coercible by `fortify()`,\n  or a valid &lt;data.frame&gt;-like object coercible by `as.data.frame()`.\nCaused by error in `.prevalidate_data_frame_like_object()`:\n! `dim(data)` must return an &lt;integer&gt; of length 2.\n\n\nOOPS, famous last words. Of course my objects still need to be in a data frame‚Ä¶ duh, Kelly.\n\nmy_df &lt;- tibble(\n  dist = c(dist_normal(mu = 0, sigma = 1), \n              dist_normal(mu = 3, sigma = 1))\n)\n\n\nggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dist))\n\n\n\n\n\n\n\n\nOkay cool but it‚Äôs sideways and also I need colors. (Side note, it‚Äôs annoying that ‚Äúdistribution‚Äù and ‚Äúdistance‚Äù are both super common stat words and they have the same natural abbreviation. Rabble rabble.)\nA little noodling and cheating with coord flip (there was probably a better way to get these on the x-axis) and I have what I want for now:\n\nmy_df &lt;- tibble(\n  dist = c(dist_normal(mu = 0, sigma = 1), \n              dist_normal(mu = 3, sigma = 1)),\n  name = c(\"Class A\", \"Class B\")\n)\n\n\nggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dist,\n                        fill = name),\n                    alpha = 0.5) +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\")\n\n\n\n\n\n\n\n\nNow we add the lines to show where the decision boundary for LDA would be (assuming equal prior probs here):\n\nggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dist,\n                        fill = name),\n                    alpha = 0.5) +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\") +\n  geom_hline(yintercept = 1.5) \n\n\n\n\n\n\n\n\nI kinda feel like I should be able to use geom_vline after coord_flip and have it not get flipped because it comes as a later layer. Rabble, rabble.\nAnyhoo. Now to animate.\nThis is a little weird to think about because gganimate wants to step through ‚Äústate‚Äù or values in the data. I think I maybe want to set it up as two separate layers, one with the static blue curve and one with the moving red ones.\n\nmy_df &lt;- tibble(\n  means = (-8:8)/2,\n  dists = dist_normal(mu = means, sigma = 1),\n)\n\nggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dists),\n                    alpha = 0.5,\n                    fill = \"#F8766D\") +\n  stat_dist_halfeye(aes(dist = dist_normal(mu = 0, sigma = 1)),\n                    alpha = 0.5,\n                    fill = \"#00BFC4\") +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\") +\n  geom_hline(aes(yintercept = (means)/2))\n\nWarning in layer_slabinterval(data = data, mapping = mapping, stat = StatSlabinterval, : All aesthetics have length 1, but the data has 17 rows.\n‚Ñπ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nNow I gotta remember how you gganimate a plot. I think you add a layer with some kind of animate_ function?\n\nOk cool got it:\n\nanim &lt;-\n  ggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dists),\n                    alpha = 0.5,\n                    fill = \"#F8766D\") +\n  stat_dist_halfeye(aes(dist = dist_normal(mu = 0, sigma = 1)),\n                    alpha = 0.5,\n                    fill = \"#00BFC4\") +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\") +\n  geom_hline(aes(yintercept = (means)/2)) +\n  transition_manual(means)\n\nanimate(anim)\n\n\n\n\n\n\n\n\nEt voila! What we‚Äôre seeing here is that if the curves have the same variance, they can only ever cross at one point. (Well, unless they have the exact same mean and have infinite overlap, but if that‚Äôs the case then LDA is pointless anyways.)\nSo now what if we let them have different variances? We‚Äôll try one for starters:\n\nmy_df &lt;- tibble(\n  means = -1,\n  dists = dist_normal(mu = means, sigma = 3),\n)\n\nggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dists),\n                    alpha = 0.5,\n                    fill = \"#F8766D\") +\n  stat_dist_halfeye(data = NULL, aes(dist = dist_normal(mu = 0, sigma = 1)),\n                    alpha = 0.5,\n                    fill = \"#00BFC4\") +\n  scale_thickness_shared() +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\") \n\n\n\n\n\n\n\n\nOkay scale_thickness_shared() ended up being really important here to keep the curves from being the same height (and thus different areas, ew).\nFinding the intersection point is more of a pain than I thought about at first, because Normal equations are not really closed-form solvable. But distributional makes this not TOO bad at least.\n\nmy_df &lt;- tibble(\n  means = (-8:8)/2,\n  dists = dist_normal(mu = means, sigma = 3),\n)\n\nstd_normal &lt;- dist_normal(mu = 0, sigma = 1)\n\ngrid &lt;- seq(-10, 10, 0.1)\nstd_dens &lt;- density(std_normal, grid)[[1]]\n\ncrosslines &lt;-\n  my_df$dists |&gt;\n  density(grid) |&gt;\n  map(\\(dens) order(abs(dens/std_dens - 1))[1:2]) |&gt;\n  map(\\(idx) sort(grid[idx])) |&gt;\n  reduce(rbind)\n\nmy_df &lt;- \n  my_df |&gt;\n  mutate(\n    lower = crosslines[,1],\n    upper = crosslines[,2]\n  )\n\nPhew. That took some doing actually.\nBUT! The part you should be excited about here is my_df$dists |&gt; density(grid). Like‚Ä¶. that vectorization is elegant af.\nAnyways. Cool. Here‚Äôs a gif.\n\nanim &lt;-\n  ggplot(my_df) +\n  stat_dist_halfeye(aes(dist = dists),\n                    alpha = 0.5,\n                    fill = \"#F8766D\") +\n  stat_dist_halfeye(data = NULL, aes(dist = dist_normal(mu = 0, sigma = 1)),\n                    alpha = 0.5,\n                    fill = \"#00BFC4\") +\n  scale_thickness_shared() +\n  coord_flip() +\n  theme_void() +\n  theme(legend.position=\"none\") +\n  geom_hline(aes(yintercept = lower)) +\n  geom_hline(aes(yintercept = upper)) +\n  transition_manual(means)\n\nanimate(anim)\n\n\n\n\n\n\n\n\nBoom! Two points of intersection, which lets you segment the space such that blue class is ‚Äúinside‚Äù and red class is ‚Äúoutside‚Äù.\nIf you can mental-image this up to two dimensions, maybe you can see how equal-variance bell curves intersect at a straight line, and nonequal-variance onces can have an ‚Äúinner circle‚Äù and ‚Äúouter circle‚Äù, hence LDA vs QDA.\nThe end!\nIf I were using this in class, I‚Äôd probably add:\n\nSome sample observations, to show that in LDA/QDA these curves are the estimates we get based on observed data, not something we magically know ahead of time.\nSome background coloring or arrows or something to clarify that the boundaries are prediction boundaries; we predict red or blue class based on where a new observation lands.\nSome aesthetic dressing up: Nice outlines on the curves, a star or something at the density intersection, better colors than red-blue, etc."
  },
  {
    "objectID": "posts/positconf_quarto/index.html",
    "href": "posts/positconf_quarto/index.html",
    "title": "Notes from Posit::conf session on Quarto",
    "section": "",
    "text": "I took so many notes for myself in this session I figured why not throw them on here!\n\n\nDavid Keyes: Making pretty reports\n\nCreate a layout with Typst.\nüí°report.qmd -&gt; typst-show.typ passes variables from Quarto params to typst -&gt; typst-template.typ sets up report properties like fonts, colors, page margins, backgrounds. ‚Äúgrid‚Äù to control placements.\n\n\nUse functions to make plots consistent.\nüí°ggplot layering makes this nice\nif (&lt;function input&gt;) p &lt;- p + &lt;layer option&gt;\nelse p &lt;- p + &lt;different layer option&gt;\nüí°custom themes! But geom_text() etc are not impacted by themes, use update_geom_defaults()\nüîó rfor.us/posit2024slides\n\n\n\n\nMine √áetinkaya-Rundel: Books!\n\nMultiple Outputs\nüí°Put things in a fenced div (:::) -&gt; write scss to style it for html and put it as theme -&gt; write style.tex file to style it for latex/pdf and include it in header.\nüí°‚Äúlitter‚Äù your qmd file with LaTeX tags like \\newpage tags, they will be ignored in html render. Use \\index tags and separate tex, then \\printindex at the end.\n\n\nAccessibility/Reproducibility\nüí° Use fig-alt for alt text. parsermd to look for instances of ggplot that don‚Äôt have fig alt.\nüí° Set global options in _common.R.\nüí° Use Quarto‚Äôs announcement option in _quarto.yml to track status of WIP project/chapters.\nüí° Avoid freeze; re-run all code in GH Actions. üò± Quarto Actions Repo!!!\n\n\nMultilingual\nüí° Use ‚Äúembed‚Äù shortcode to insert notebooks with different engines. ü§Ø\nüîó bit.ly/books-conf24\n\n\n\n\nMeghan Hall: templates\nüí° Start by tinkering with custom scss (reference as theme in _quarto.yml) and make use of custom divs!\nIn qmd:\n::: some-div-name\ntext\n:::\nIn scss:\n.some-div-name {\n&lt;css junk&gt;\n}\nüí° ‚Äúinspect‚Äù in browser and Mozilla web docs for css/html elements.\nüí° Put all this in an internal package, make it copy from inst to working directory and open qmd in editor.\nü§î Internal package vs.¬†template in RStudio vs quarto use template???\n\n\n\nAndrew Bray: scrollytelling\nüí° ‚Äúcloseread‚Äù Quarto extension\nformat: closeread-html\n\n::: {.cr-section}\nblah blah left sidebar blah\n\n@cr-thing\n\n:::{.cr-thing}\nstuff that should appear on the right at trigger point\n:::\n\n:::\nüí° Can also add ‚Äúfocus effects‚Äù to ‚Äústickies‚Äù at trigger points. e.g.¬†zooming in to pieces of an image, pan-to and scale-by\n[@cr-thing]{pan-to=‚Äù70%,-10%‚Äù scale-by=‚Äù2‚Äù}\nüí° Use the progression tracker (crProgressBlock OJS variable) in code to change the images as the user scrolls.\nüîó Example"
  },
  {
    "objectID": "posts/positron/index.html",
    "href": "posts/positron/index.html",
    "title": "First thoughts on Positron",
    "section": "",
    "text": "This is a very disorganized list of notes I made trying out Positron for the first time. Hopefully some slightly more coherent updates will come along eventually as I use it more and/or it updates.\nWorking directories: I thought I would hate the ‚Äúopen a folder‚Äù workflow (as opposed to opening a .RProj) but actually I‚Äôm vibing with it. It‚Äôs especially nice for one-off tasks, e.g.¬†when I use R to calculate an exam curve. I never quite liked choosing between a ‚Äúfloating‚Äù qmd or a one-time-use R Project.\n\n\n\nFolders behave like projects.\n\n\nThat said, my work didn‚Äôt ‚Äúfeel‚Äù like a project. I like having all the RStudio windows open in my dock so I can project hop. Relatedly - I crash R all the time, and I like that it only crashes the instance I‚Äôm in; does using Positron mean that if I crash things, all my projects close?\n\n\n\nRRRRRRRRRR\n\n\nQuarto: The ‚Äúnew notebook‚Äù shortcut on the landing page makes a Jupyter doc not a Quarto doc. Booo. Plus there‚Äôs NO RENDER BUTTON for Quarto docs. Ew. Worst,there‚Äôs no inline preview option in Quarto yet, which is a major dealbreaker for now. I‚Äôm told these things will be added; but for now Positron is not super optimized for Quarto.\n\n\n\nThis opens a new ipynb.\n\n\nChunks: The chunk shortcut is different. That‚Äôs fine, I think it‚Äôs PC/Mac consistent now. I do like the drop-down language options when you add a chunk‚Ä¶ except that after the first chunk I don‚Äôt want to have to ‚Äúconfirm‚Äù my language choice every time. The ‚Äúrun this chunk‚Äù play button is IMHO better, although breaking my muscle memory has been hard.\n\n\n\nSnazzy, but now I have to hit ‚Äúenter‚Äù every time I make a new chunk.\n\n\nPanes: I don‚Äôt like having the variables pane at the bottom, and then it disappears if you switch tabs at top. I like being able to see my environment at all times regardless of what help tab I‚Äôm in.\n \nFiles: I like having notification badges for unsaved files. It‚Äôs also just a lot easier to navigate between files in general.\n\n\n\nI love having the Explorer on the left!\n\n\nHelp: The dynamic suggestions are cool‚Ä¶ but floating helpers are in my way. I like the info but it‚Äôs in my way enough that I would turn this off - I‚Äôd rather have some kind of permanent help text location in a corner that I can glance at when I need it.\n\n\n\nIt‚Äôs just kind of an excessive amount of pop-up and it‚Äôs blocking my pipeline."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "paRticles",
    "section": "",
    "text": "One of my resolutions right now is to be better about putting things out into the internet world, without feeling like they need to be polished or perfect or full of lots of content.\nI already have a mostly unused blog as well as some long-form posts on other blogs and I‚Äôll probably stick to those places when I manage to write things that are, you know, thorough and carefully edited over weeks. But probably my favorite thing I‚Äôve ever put out into the internet world is this unhinged stream-of-consciousness about trying to learn NSE, and I want to get more comfortable with that kind of in-the-moment micro post.\nSo: here is where I‚Äôll try to put quick ideas, discoveries, and little things that I figure out or think are cool. Welcome to paRticles!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "paRticles",
    "section": "",
    "text": "Notes from Posit::conf session on Quarto\n\n\n\n\n\n\nconf\n\n\n\n\n\n\n\n\n\nAug 14, 2024\n\n\nKelly Bodwin\n\n\n\n\n\n\n\n\n\n\n\n\nFirst thoughts on Positron\n\n\n\n\n\n\nnews\n\n\nopinion\n\n\n\n\n\n\n\n\n\nAug 5, 2024\n\n\nKelly Bodwin\n\n\n\n\n\n\n\n\n\n\n\n\n1-D Illustration of LDA vs QDA with {distributional}\n\n\n\n\n\n\nteaching\n\n\nnew packages\n\n\n\n\n\n\n\n\n\nJul 20, 2024\n\n\nKelly Bodwin\n\n\n\n\n\n\n\n\n\n\n\n\npaRticles\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nJul 13, 2024\n\n\nKelly Bodwin\n\n\n\n\n\n\nNo matching items"
  }
]